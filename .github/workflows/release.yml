name: Publish release

on:
  push:
    tags:
      - v[0-9].[0-9]+.[0-9]+

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          java-package: jdk+fx
      - uses: azure/docker-login@v1
        with:
          username: karasiq
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish docker image
        run: |
          export JAVA_OPTS="-Xmx4G -Denable-tika=1 -Denable-javacv=1"
          sbt consoleApp/docker:publish

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: version
        run: |
          git fetch --prune --unshallow
          git checkout master
          GitMessage=$(git log -1 --pretty=%B)
          VersionMsgRegex='Version ([0-9]+\.[0-9]+\.?[0-9]*).*'
          if [[ $GitMessage =~ $VersionMsgRegex ]]; then
            Version="${BASH_REMATCH[1]}"
          else
            VersionTag=$(git describe --tags --abbrev=0)
            Version="${VersionTag:1}"
          fi
          echo "::set-output name=version::$Version"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          java-package: jdk+fx
      - name: Package DEB
        run: |
          Version="${{steps.version.outputs.version}}"
          Universal="${{github.workspace}}/desktop-app/target/universal"
          JPBundles="$Universal/jdkpackager/bundles"

          JAVA_OPTS="-Xmx4G -Denable-tika=1 -Denable-javacv-all=1" sbt desktopApp/universal:packageBin
          mv "$Universal/shadowcloud-$Version.zip" "$Universal/shadowcloud-full-$Version.zip"

          JAVA_OPTS="-Xmx4G -Denable-tika=1 -Denable-javacv=1" sbt desktopApp/jdkPackager:packageBin
          mv "$JPBundles/shadowcloud-$Version.deb" "$JPBundles/shadowcloud-full-$Version.deb"
          mv "$JPBundles/shadowcloud-$Version-1.x86_64.rpm" "$JPBundles/shadowcloud-full-$Version-1.x86_64.rpm"

          JAVA_OPTS="-Xmx4G -Denable-tika=0 -Denable-javacv=0" sbt desktopApp/jdkPackager:packageBin desktopApp/universal:packageBin
          mv "$JPBundles/shadowcloud-$Version.deb" "$JPBundles/shadowcloud-light-$Version.deb"
          mv "$JPBundles/shadowcloud-$Version-1.x86_64.rpm" "$JPBundles/shadowcloud-light-$Version-1.x86_64.rpm"
          mv "$Universal/shadowcloud-$Version.zip" "$Universal/shadowcloud-light-$Version.zip"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{github.workspace}}/desktop-app/target/universal/*.zip
            ${{github.workspace}}/desktop-app/target/universal/jdkpackager/bundles/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: version
        run: |
          git fetch --prune --unshallow
          git checkout master
          $GitMessage = (git log -1 --pretty=%B) | Out-String
          $VersionMsgRegex = "Version ([0-9]+\.[0-9]+\.?[0-9]*)\s*"

          if ($GitMessage -match $VersionMsgRegex) {
            $Version = $Matches[1]
          } else {
            $VersionTag = (git describe --tags --abbrev=0) | Out-String
            $Version = $VersionTag.SubString(1)
          }
          Write-Output "::set-output name=version::$Version"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          java-package: jdk+fx
      - name: Package EXE
        run: |
          choco uninstall -y InnoSetup
          choco install -y InnoSetup --version=5.6.1

          $Version="${{steps.version.outputs.version}}"
          $Universal="desktop-app/target/universal"
          $JPBundles="$Universal/jdkpackager/bundles"

          $env:JAVA_OPTS="-Xmx4G -Denable-tika=1 -Denable-javacv=1"
          sbt desktopApp/jdkPackager:packageBin
          move "$JPBundles\shadowcloud-$Version.exe" "$JPBundles\shadowcloud-full-$Version.exe"

          $env:JAVA_OPTS="-Xmx4G -Denable-tika=0 -Denable-javacv=0"
          sbt desktopApp/jdkPackager:packageBin
          move "$JPBundles\shadowcloud-$Version.exe" "$JPBundles\shadowcloud-light-$Version.exe"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{github.workspace}}/desktop-app/target/universal/jdkpackager/bundles/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: version
        run: |
          git fetch --prune --unshallow
          git checkout master
          export GitMessage=$(git log -1 --pretty=%B)
          VersionMsgRegex='Version ([0-9]+\.[0-9]+\.?[0-9]*).*'
          if [[ $GitMessage =~ $VersionMsgRegex ]]; then
            export Version="${BASH_REMATCH[1]}"
          else
            export VersionTag=$(git describe --tags --abbrev=0)
            export Version="${VersionTag:1}"
          fi
          echo "::set-output name=version::$Version"
      - name: Package PKG
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 8.0.262.fx-zulu
          sdk install sbt 1.3.8
          sdk use java 8.0.262.fx-zulu
          sdk use sbt 1.3.8

          Version="${{steps.version.outputs.version}}"
          Universal="${{github.workspace}}/desktop-app/target/universal"
          JPBundles="$Universal/jdkpackager/bundles"

          JAVA_OPTS="-Xmx4G -Denable-tika=0 -Denable-javacv=0" sbt "set jdkPackagerType in desktopApp :=\"pkg\"" desktopApp/jdkPackager:packageBin
          mv "$JPBundles/shadowcloud-$Version.pkg" "$JPBundles/shadowcloud-light-$Version.pkg"

          JAVA_OPTS="-Xmx4G -Denable-tika=1 -Denable-javacv=1" sbt "set jdkPackagerType in desktopApp :=\"pkg\"" desktopApp/jdkPackager:packageBin
          mv "$JPBundles/shadowcloud-$Version.pkg" "$JPBundles/shadowcloud-full-$Version.pkg"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{github.workspace}}/desktop-app/target/universal/jdkpackager/bundles/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
